{"remainingRequest":"/Users/macbookpro/Desktop/SmartHouse/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookpro/Desktop/SmartHouse/src/components/SignUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macbookpro/Desktop/SmartHouse/src/components/SignUp.vue","mtime":1573511594000},{"path":"/Users/macbookpro/Desktop/SmartHouse/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/macbookpro/Desktop/SmartHouse/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/SmartHouse/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {createNamespacedHelpers} from 'vuex'\nconst {mapGetters} = createNamespacedHelpers('users')\nexport default {\n    name :'SignUp',\n\n\n    data(){\n        return{\n            emailExist: false,\n            loadingDialog :false,\n\n            fullname:'',\n            email:'',\n            // phoneNum:'',\n            password:'',\n            confirmPassword:'',\n        \n            valid: true,\n            show1: false,\n\n            nameRules: [\n                v => !!v || 'Name is required',\n                v => new RegExp('^(.{3,25}$)').test(v) || 'Name must be atleast 3 and atmost 25 characters long',\n                v => /^([a-z']+(-| )?)+$/i.test(v) || 'Name is not valid'\n            ],\n            emailRules: [\n                v => !!v || 'E-mail is required',\n                v => /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(String(v).toLowerCase()) || 'Invalid E-mail address',\n            ],\n\n            //  phonNumRules: [\n            //     v => !!v || 'Password is required',\n            //     v => new RegExp('^(.{8,12}$)').test(v) || 'Password must be between 8 to 12 characters long',\n            //     v => /^\\d*\\.?\\d*$/.test(v) || 'Only digits are allowed'\n            // ],\n\n            passwordRules: [\n                v => !!v || 'Password is required',\n                v => new RegExp('^(.{6,12}$)').test(v) || 'Password must be between 6 to 12 characters long',\n                v => new RegExp('^(?=.*[A-Z])').test(v) || 'Password must contain at least 1 uppercase alphabetical character',\n                v => new RegExp('^(?=.*[0-9])').test(v) || 'Password must contain at least 1 numeric character',\n            ],\n\n            confirmPasswordRules: [\n                v => !!v || 'Password is required',\n                v => this.password == this.confirmPassword || 'Passwords do not match'\n            ],\n\n        }\n    },\n\n    computed:{\n        ...mapGetters(['isEmailAlreadyExist']),\n        ...mapGetters(['getsignUpSuccessAlert']),\n\n    },\n\n    methods: {\n        reset () {\n            this.$refs.form.reset()\n        },\n        resetValidation () {\n            this.$refs.form.resetValidation()\n        },\n\n        gotoLogin(){\n            this.$router.push('/signin')\n        },\n        onSignup(){\n            console.log('Sign up...')\n          if (this.$refs.form.validate()) {\n            this.snackbar = true\n             this.$store.dispatch('users/signUp',{email: this.email, password: this.password, name: this.fullname})\n             this.loadingDialog = true\n          }\n            this.resetValidation()\n        },\n    },\n    // stephan\n\n     watch: {\n      loadingDialog (val) {\n        if (!val) return\n        setTimeout(() => (this.loadingDialog = false), 2000)\n      },\n\n      isEmailAlreadyExist(value){\n          if(value){\n              this.email = ''\n              this.password = ''\n              this.confirmPassword = ''\n              this.emailExist = true;\n          }\n\n          console.log(this.emailExist)\n      },\n\n      getsignUpSuccessAlert(v){\n          if(v){\n              setTimeout(()=>{\n                  this.$router.push({name:'signin'})\n              },2000);\n              this.reset()\n          }\n      }\n\n    },\n\n     created () {\n         this.$vuetify.theme.dark = false\n    },\n\n}\n",{"version":3,"sources":["SignUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA","file":"SignUp.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"sign-container\">\n            <div class=\"container-child\"></div>\n            <div class=\"container-child\">\n                <v-card class=\"elevation-12\">\n                    <v-toolbar color=\"dark\" dark >\n                        <v-toolbar-title style=\"color:gray\">Create new account</v-toolbar-title>\n                        <div class=\"flex-grow-1\"></div>\n                    </v-toolbar>\n                    <v-card-text>\n                        <v-form v-model=\"valid\" ref=\"form\">\n                            <div class=\"sign-detail\">\n                                <v-text-field\n                                    v-model=\"fullname\"\n                                   :rules=\"nameRules\"\n                                    id=\"fullname\"\n                                    color=\"dark\"\n                                    label=\"FullName\"\n                                    name=\"name\"\n                                    type=\"text\" \n                                    required>\n                                </v-text-field>\n                            </div>\n                            <div class=\"sign-detail\">\n                                <v-text-field\n                                    v-model=\"email\"\n                                    :rules=\"emailRules\"\n                                    id=\"email\"\n                                    color=\"dark\"\n                                    label=\"E-mail\"\n                                    name=\"email\"\n                                    type=\"email\" \n                                    required>\n                                </v-text-field>\n                            </div>\n                            <div class=\"sgin-detail\">\n                                <v-text-field\n                                    v-model=\"password\"\n                                    :rules=\"passwordRules\"\n                                    id=\"password\"\n                                    color=\"dark\"\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    type=\"password\" >\n                                </v-text-field>\n                            </div>\n                            <div class=\"sgin-detail\">\n                                <v-text-field\n                                    v-model=\"confirmPassword\"\n                                    id=\"confirmPassword\"\n                                    color=\"dark\"\n                                    label=\"Confirm password\"\n                                    name=\"confirmPassword\"\n                                    type=\"password\" \n                                    :rules=\"confirmPasswordRules\"\n                                    >\n                                </v-text-field>\n                            </div>\n                            <v-card-actions style=\"margin-top:20px\">\n                                <div class=\"flex-grow-1\"></div>\n                                <v-btn \n                                :disabled=\"!valid && !loadingDialog && !emailExist\" \n                                color=\"dark\" \n                                style=\"margin-right:10px\" \n                                @click=\"onSignup\"\n                                :loading=\"loadingDialog\"\n                                >Create</v-btn>\n                            </v-card-actions>\n\n                            <v-dialog\n                                v-model=\"loadingDialog\"\n                                hide-overlay\n                                persistent\n                                width=\"300\"\n                                >\n                                <v-card color=\"rgb(153, 149, 149,1)\" dark >\n                                    <v-card-text>\n                                    Account creation...\n                                    <v-progress-linear\n                                        style=\"margin:3px\"\n                                        indeterminate\n                                        color=\"white\"\n                                        class=\"mb-0\"\n                                    ></v-progress-linear>\n                                    </v-card-text>\n                                </v-card>\n                            </v-dialog>\n                        </v-form>\n                    </v-card-text>\n                    <v-btn @click=\"gotoLogin\" text style=\"margin: 10px\">Go back to login</v-btn>                     \n                    </v-card>\n\n\n                <v-dialog\n                    v-model=\"emailExist\"\n                    hide-overlay\n                    persistent\n                    max-width=\"290\"\n                    >\n                    <v-card color=\"red\">\n\n                        <v-card-title class=\"headline\"><b>Oops!!</b></v-card-title>\n                    </v-card>\n\n                        <v-card-text class=\"white\">\n                            <span style=\"color:gray\">Email provided is already linked to an account. Try with another email or go back to the login page please!</span>\n                        </v-card-text>\n\n                        <v-card-actions class=\"white\">\n\n                        <div class=\"flex-grow-1\"></div>\n                        <v-btn color=\"gray\" @click=\"emailExist = false\"> \n                            OK\n                        </v-btn>\n                        </v-card-actions>\n                </v-dialog>\n\n\n            </div>\n            <div class=\"container-child\"> </div> \n    </div>      \n</template>\n\n<script>\nimport {createNamespacedHelpers} from 'vuex'\nconst {mapGetters} = createNamespacedHelpers('users')\nexport default {\n    name :'SignUp',\n\n\n    data(){\n        return{\n            emailExist: false,\n            loadingDialog :false,\n\n            fullname:'',\n            email:'',\n            // phoneNum:'',\n            password:'',\n            confirmPassword:'',\n        \n            valid: true,\n            show1: false,\n\n            nameRules: [\n                v => !!v || 'Name is required',\n                v => new RegExp('^(.{3,25}$)').test(v) || 'Name must be atleast 3 and atmost 25 characters long',\n                v => /^([a-z']+(-| )?)+$/i.test(v) || 'Name is not valid'\n            ],\n            emailRules: [\n                v => !!v || 'E-mail is required',\n                v => /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(String(v).toLowerCase()) || 'Invalid E-mail address',\n            ],\n\n            //  phonNumRules: [\n            //     v => !!v || 'Password is required',\n            //     v => new RegExp('^(.{8,12}$)').test(v) || 'Password must be between 8 to 12 characters long',\n            //     v => /^\\d*\\.?\\d*$/.test(v) || 'Only digits are allowed'\n            // ],\n\n            passwordRules: [\n                v => !!v || 'Password is required',\n                v => new RegExp('^(.{6,12}$)').test(v) || 'Password must be between 6 to 12 characters long',\n                v => new RegExp('^(?=.*[A-Z])').test(v) || 'Password must contain at least 1 uppercase alphabetical character',\n                v => new RegExp('^(?=.*[0-9])').test(v) || 'Password must contain at least 1 numeric character',\n            ],\n\n            confirmPasswordRules: [\n                v => !!v || 'Password is required',\n                v => this.password == this.confirmPassword || 'Passwords do not match'\n            ],\n\n        }\n    },\n\n    computed:{\n        ...mapGetters(['isEmailAlreadyExist']),\n        ...mapGetters(['getsignUpSuccessAlert']),\n\n    },\n\n    methods: {\n        reset () {\n            this.$refs.form.reset()\n        },\n        resetValidation () {\n            this.$refs.form.resetValidation()\n        },\n\n        gotoLogin(){\n            this.$router.push('/signin')\n        },\n        onSignup(){\n            console.log('Sign up...')\n          if (this.$refs.form.validate()) {\n            this.snackbar = true\n             this.$store.dispatch('users/signUp',{email: this.email, password: this.password, name: this.fullname})\n             this.loadingDialog = true\n          }\n            this.resetValidation()\n        },\n    },\n    // stephan\n\n     watch: {\n      loadingDialog (val) {\n        if (!val) return\n        setTimeout(() => (this.loadingDialog = false), 2000)\n      },\n\n      isEmailAlreadyExist(value){\n          if(value){\n              this.email = ''\n              this.password = ''\n              this.confirmPassword = ''\n              this.emailExist = true;\n          }\n\n          console.log(this.emailExist)\n      },\n\n      getsignUpSuccessAlert(v){\n          if(v){\n              setTimeout(()=>{\n                  this.$router.push({name:'signin'})\n              },2000);\n              this.reset()\n          }\n      }\n\n    },\n\n     created () {\n         this.$vuetify.theme.dark = false\n    },\n\n}\n</script>\n\n<style scoped>\n\n.sign-container{\n    align-content: center;\n    display: flex;\n    justify-content: space-evenly;\n    margin: 10%;\n}\n\n.container-child{\n    min-width: 300px;\n    flex-basis: 40%;\n    align-content: center;\n}\n\n\n.a :hover{\n    color: rgb(57, 209, 57);\n}\n\n.sign-detail{\n    text-align: center;\n    display: flex;\n}\n\n.white{\n    background: white;\n}\n\n\n\n\n\n</style>\n"]}]}