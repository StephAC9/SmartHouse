{"remainingRequest":"/Users/macbookpro/Desktop/SmartHouseAPP/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookpro/Desktop/SmartHouseAPP/src/components/Devices.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macbookpro/Desktop/SmartHouseAPP/src/components/Devices.vue","mtime":1573511594000},{"path":"/Users/macbookpro/Desktop/SmartHouseAPP/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/macbookpro/Desktop/SmartHouseAPP/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/SmartHouseAPP/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DeleteNotice from './DeleteNotice'\nimport DeviceItem from './RoomItem'\nimport AddDevice from './AddDevice'\nimport {createNamespacedHelpers} from 'vuex'\nconst {mapGetters} = createNamespacedHelpers('users')\nimport {\n    mdiDelete,\n    mdiHeart\n  } from '@mdi/js'\nexport default {\n    name:'Devices',\n\n    components:{\n        AddDevice,\n        DeviceItem,\n        DeleteNotice\n    },\n\n    props:['id','user'],\n\n    data(){\n        return{\n            dialog: false,\n            showList: false,\n\n            icons: {\n                mdiDelete,\n                mdiHeart\n            },\n            devicesNames: [\n                { text: 'Lamp' },\n                { text: 'Coffe maker' },\n                { text: 'Air-conditioner' },\n                { text: 'Dishwasher' },\n                { text: 'SmartTv' },\n                { text: 'Windows blind' },\n            ],\n            closeOnContentClick: true,\n        }\n    },\n\n    computed:{\n        ...mapGetters(['currentRoom','devicesList']),\n    },\n\n     created () {\n      this.$vuetify.theme.dark = false\n      console.log(this.currentRoom)\n    },\n\n    watch:{\n        devicesList(v){\n            console.log(v)\n            console.log(this.currentRoom.roomName)\n        }\n    },\n    \n    methods:{\n        deleteDevice(deviceId){\n            this.dialog = true\n        },\n\n        addToFavorite(id){\n            this.$store.dispatch('users/addToUserFavorite',\n                                                        {\n                                                            roomId: this.id,\n                                                            userId: this.user.id, \n                                                            roomName: this.currentRoom.roomName, \n                                                            deviceId: id\n                                                        })\n        }\n\n\n    }\n    \n}\n",{"version":3,"sources":["Devices.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA","file":"Devices.vue","sourceRoot":"src/components","sourcesContent":["<template>\n <div class=\"main-container-devices\">\n    <div>\n      <h2><strong>MY DEVICES</strong></h2>\n      <div>\n          <AddDevice :id=\"id\"></AddDevice>\n      </div>\n    </div>\n\n    <v-dialog v-model=\"dialog\" persistent max-width=\"290\">\n        <v-card>\n            <v-card-title class=\"headline\">DELETION NOTICE</v-card-title>\n            <v-card-text>This room with all the devices in it will be completely removed <span style=\"font-size:25px; color:red;font-style:bold\">!!!</span></v-card-text>\n            <v-card-actions>\n            <div class=\"flex-grow-1\"></div>\n            <v-btn color=\"grey darken-1\" text @click=\"dialog = false\">Cancel</v-btn>\n            <v-btn color=\"red darken-1\" text @click=\"dialog = false\">Delete</v-btn>\n            </v-card-actions>\n        </v-card>\n        </v-dialog>\n\n         <div class=\"container-devices\" >\n                <v-card class=\"device-contain\" v-for=\"(device,index) in devicesList\" :key=\"index\"> \n                    <div class=\"device-image\">\n                        <img :src=\"require(`@/assets/${device.imgUrl}.jpg`)\" alt=\"Avatar\" style=\"height: 50px; width:90%\">\n                    </div>\n                    <div style=\"margin:3px\">\n                        <h4><b>{{device.name}}</b></h4>\n                    </div>\n                    <div class=\"container-action\">\n                        <div>\n                            <v-switch color=\"yellow\" style=\"height: 20px\"></v-switch>\n                        </div>\n                        <div style=\"text-align:end\">\n                            <v-btn text icon color=\"rgb(255, 100, 200,1)\">\n                                <v-icon style=\"width:5px;\" @click=\"addToFavorite(device.id)\">mdi-heart</v-icon>\n                            </v-btn>\n                            <v-icon color=\"rgb(255, 50, 50,1)\" left style=\"width:20px\" @click=\"deleteDevice(device.key)\">{{ icons.mdiDelete }}</v-icon>\n                        </div>\n                    </div>            \n            </v-card>\n         </div>\n\n        <!-- <DeviceItem :currentRoom=\"currentRoom\"></DeviceItem> -->\n</div>\n</template>\n\n<script>\nimport DeleteNotice from './DeleteNotice'\nimport DeviceItem from './RoomItem'\nimport AddDevice from './AddDevice'\nimport {createNamespacedHelpers} from 'vuex'\nconst {mapGetters} = createNamespacedHelpers('users')\nimport {\n    mdiDelete,\n    mdiHeart\n  } from '@mdi/js'\nexport default {\n    name:'Devices',\n\n    components:{\n        AddDevice,\n        DeviceItem,\n        DeleteNotice\n    },\n\n    props:['id','user'],\n\n    data(){\n        return{\n            dialog: false,\n            showList: false,\n\n            icons: {\n                mdiDelete,\n                mdiHeart\n            },\n            devicesNames: [\n                { text: 'Lamp' },\n                { text: 'Coffe maker' },\n                { text: 'Air-conditioner' },\n                { text: 'Dishwasher' },\n                { text: 'SmartTv' },\n                { text: 'Windows blind' },\n            ],\n            closeOnContentClick: true,\n        }\n    },\n\n    computed:{\n        ...mapGetters(['currentRoom','devicesList']),\n    },\n\n     created () {\n      this.$vuetify.theme.dark = false\n      console.log(this.currentRoom)\n    },\n\n    watch:{\n        devicesList(v){\n            console.log(v)\n            console.log(this.currentRoom.roomName)\n        }\n    },\n    \n    methods:{\n        deleteDevice(deviceId){\n            this.dialog = true\n        },\n\n        addToFavorite(id){\n            this.$store.dispatch('users/addToUserFavorite',\n                                                        {\n                                                            roomId: this.id,\n                                                            userId: this.user.id, \n                                                            roomName: this.currentRoom.roomName, \n                                                            deviceId: id\n                                                        })\n        }\n\n\n    }\n    \n}\n</script>\n\n<style scoped>\n  .main-container-devices{\n      text-align: center;\n      display: flex;\n      flex-direction:column;\n      border-radius: 10px;\n      background: rgb(114, 114, 112);\n      padding: 10px;\n      justify-content: space-between;\n      flex-wrap:wrap;\n  }\n\n  .container-devices{\n      background-color: rgb(153, 149, 149,1);\n      border-radius: 10px;\n      display: flex;\n      justify-content: space-evenly;      \n      padding: 10px;\n      flex-wrap:wrap;     \n      background-size: cover;\n      overflow:hidden;\n  }\n\n  .device-contain {\n    display: flex;\n    text-align: center;\n    flex-direction: column;\n    justify-content: space-around;   \n    max-width: 130px;\n    min-width: 130px;\n    margin: 10px;\n    padding: 5px; \n    border-radius: 10px;\n}\n    .container-action {\n        border-radius: 10px;\n        background: rgb(241, 238, 230);\n        display: flex;\n        padding: 5px;\n        flex-direction: column;\n    }\n\n</style>"]}]}